// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Connection interface {
	IsConnection()
}

type Edge interface {
	IsEdge()
}

type Node interface {
	IsNode()
}

type NewTodo struct {
	Title string `json:"title"`
	Text  string `json:"text"`
}

type PageInfo struct {
	HasNextPage     bool `json:"hasNextPage"`
	HasPreviousPage bool `json:"hasPreviousPage"`
	StartCursor     *int `json:"startCursor"`
	EndCursor       *int `json:"endCursor"`
}

type PaginationInput struct {
	First *int `json:"first"`
	After *int `json:"after"`
}

type Todo struct {
	ID    int    `json:"id"`
	Title string `json:"title"`
	Text  string `json:"text"`
	Done  bool   `json:"done"`
}

func (Todo) IsNode() {}

type TodoConnection struct {
	PageInfo *PageInfo   `json:"pageInfo"`
	Edges    []*TodoEdge `json:"edges"`
}

func (TodoConnection) IsConnection() {}

type TodoEdge struct {
	Cursor int   `json:"cursor"`
	Node   *Todo `json:"node"`
}

func (TodoEdge) IsEdge() {}

type UpdateTodo struct {
	ID    int     `json:"id"`
	Text  *string `json:"text"`
	Title *string `json:"title"`
	Done  *bool   `json:"done"`
}
